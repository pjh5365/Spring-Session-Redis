pipeline {
    agent any

    environment {
        SSH_PASSWORD = credentials('SSH_PASSWORD')       // Jenkins Credential ID
        PRIVATE_SERVER = 'root@10.0.1.6'                // Private server address
        PEM_PATH = credentials('PEM_PATH')              // Jenkins Credential ID
        APP_PATH = '/app'                               // Application path in container
        GITLAB_REPO = 'http://223.130.137.86/pjh5365/spring-session-redis.git' // GitLab Repository URL
    }

    stages {
        stage('Deploy to Private Server and Clone Code') {
            steps {
                echo 'Connecting to Private Server and Cloning GitLab Repository...'
                sh '''
                export SSHPASS="${SSH_PASSWORD}"
                sshpass -e ssh -o StrictHostKeyChecking=no -i ${PEM_PATH} ${PRIVATE_SERVER} << EOF
                  mkdir -p /opt/app/spring-session-redis
                  cd /opt/app/spring-session-redis
                  if [ -d .git ]; then
                    git reset --hard
                    git pull origin main
                  else
                    git clone ${GITLAB_REPO} .
                  fi
                EOF
                '''
            }
        }
        stage('Build JAR on Private Server') {
            steps {
                echo 'Building JAR on Private Server...'
                sh '''
                export SSHPASS="${SSH_PASSWORD}"
                sshpass -e ssh -o StrictHostKeyChecking=no -i ${PEM_PATH} ${PRIVATE_SERVER} << EOF
                  cd /opt/app/spring-session-redis
                  chmod +x ./gradlew
                  ./gradlew clean build -x test
                EOF
                '''
            }
        }
        stage('Run Docker Container') {
            steps {
                echo 'Running Docker Container on Private Server...'
                sh '''
                export SSHPASS="${SSH_PASSWORD}"
                sshpass -e ssh -o StrictHostKeyChecking=no -i ${PEM_PATH} ${PRIVATE_SERVER} << EOF
                  docker stop spring-jenkins-app || true
                  docker rm spring-jenkins-app || true
                  docker run -d --name spring-jenkins-app \\
                    -v /opt/app/spring-session-redis/build/libs/*-SNAPSHOT.jar:${APP_PATH}/app.jar \\
                    -p 8080:8080 eclipse-temurin:17-jre java -jar ${APP_PATH}/app.jar
                EOF
                '''
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed!'
        }
        success {
            echo 'Pipeline completed successfully!'
        }
        failure {
            echo 'Pipeline failed!'
        }
    }
}
